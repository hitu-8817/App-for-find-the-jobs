-- languages lookup (Hindi, English, Hinglish, etc)
CREATE DATABASE bhasha;
use bhasha;

CREATE TABLE languages (
  id INT AUTO_INCREMENT PRIMARY KEY,     -- unique ID for each language
  code VARCHAR(20) UNIQUE NOT NULL,      -- short code like 'HINDI', 'ENGLISH'
  name VARCHAR(50) NOT NULL              -- full display name
);
INSERT INTO languages (code, name) VALUES
('HINDI', 'Hindi'),
('ENGLISH', 'English'),
('HINGLISH', 'Hinglish');

CREATE TABLE hr (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(150) NOT NULL,
  company VARCHAR(150),
  area_code VARCHAR(20),
  address TEXT,
  contact_no VARCHAR(30),
  email VARCHAR(120),
  rating_avg DECIMAL(2,1) DEFAULT 0.0,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE hr_languages (
  hr_id BIGINT NOT NULL,
  language_id INT NOT NULL,
  PRIMARY KEY (hr_id, language_id),
  FOREIGN KEY (hr_id) REFERENCES hr(id) ON DELETE CASCADE,
  FOREIGN KEY (language_id) REFERENCES languages(id)
);

CREATE TABLE job_posting (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  hr_id BIGINT NOT NULL,
  title VARCHAR(200) NOT NULL,
  description TEXT,
  area_code VARCHAR(20),
  location VARCHAR(255),
  salary_min INT,
  salary_max INT,
  language_preference VARCHAR(100), -- optional free-text or use a join table
  is_active BOOLEAN DEFAULT TRUE,
  criteria_json JSON, -- store eligibility rules if flexible
  posted_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (hr_id) REFERENCES hr(id)
);

CREATE TABLE job_languages (
  job_id BIGINT NOT NULL,
  language_id INT NOT NULL,
  PRIMARY KEY (job_id, language_id),
  FOREIGN KEY (job_id) REFERENCES job_posting(id) ON DELETE CASCADE,
  FOREIGN KEY (language_id) REFERENCES languages(id)
);

CREATE TABLE candidate (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(150) NOT NULL,
  email VARCHAR(120),
  contact_no VARCHAR(30),
  area_code VARCHAR(20),
  experience_years INT,
  resume_url VARCHAR(500),
  languages TEXT, -- or normalized as mapping table similar to hr_languages
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE application (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  job_id BIGINT NOT NULL,
  candidate_id BIGINT NOT NULL,
  status VARCHAR(30) DEFAULT 'APPLIED', -- APPLIED, SHORTLISTED, REJECTED, OFFERED, HIRED
  applied_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (job_id) REFERENCES job_posting(id),
  FOREIGN KEY (candidate_id) REFERENCES candidate(id)
);

CREATE TABLE interview_schedule (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  application_id BIGINT NOT NULL,
  interview_date DATE NOT NULL,
  interview_time TIME,
  mode VARCHAR(30), -- 'ONLINE' / 'OFFLINE'
  location VARCHAR(255),
  interviewer VARCHAR(150),
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (application_id) REFERENCES application(id) ON DELETE CASCADE
);

CREATE TABLE hr_review (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  hr_id BIGINT NOT NULL,
  candidate_id BIGINT,
  rating INT CHECK (rating >= 1 AND rating <= 5),
  attitude ENUM('GOOD','AVERAGE','POOR'),
  comments TEXT,
  moderated BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (hr_id) REFERENCES hr(id),
  FOREIGN KEY (candidate_id) REFERENCES candidate(id)
);

CREATE TABLE daily_updates (
  id BIGINT AUTO_INCREMENT PRIMARY KEY,
  job_id BIGINT,
  hr_id BIGINT,
  update_text TEXT,
  created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (job_id) REFERENCES job_posting(id),
  FOREIGN KEY (hr_id) REFERENCES hr(id)
);
SELECT * FROM languages;
SHOW TABLES;
